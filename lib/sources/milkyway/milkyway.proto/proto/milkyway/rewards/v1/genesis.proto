syntax = "proto3";
package milkyway.rewards.v1;

import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";
import "milkyway/rewards/v1/params.proto";
import "milkyway/rewards/v1/models.proto";

option go_package = "github.com/milkyway-labs/milkyway/v2/x/rewards/types";

// DelegatorWithdrawInfo is the address for where delegation rewards are
// withdrawn to by default this struct is only used at genesis to feed in
// default withdraw addresses.
message DelegatorWithdrawInfo {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // delegator_address is the address of the delegator.
  string delegator_address = 1
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // withdraw_address is the address to withdraw the delegation rewards to.
  string withdraw_address = 2
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

// OutstandingRewardsRecord is used for import/export via genesis json.
message OutstandingRewardsRecord {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // delegation_target_id is the ID of the delegation target.
  uint32 delegation_target_id = 1
      [ (gogoproto.customname) = "DelegationTargetID" ];

  // outstanding_rewards represents the outstanding rewards of the delegation
  // target.
  repeated DecPool outstanding_rewards = 2 [
    (gogoproto.castrepeated) = "DecPools",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// HistoricalRewardsRecord is used for import / export via genesis
// json.
message HistoricalRewardsRecord {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // delegation_target_id is the ID of the delegation target.
  uint32 delegation_target_id = 1
      [ (gogoproto.customname) = "DelegationTargetID" ];

  // period defines the period the historical rewards apply to.
  uint64 period = 2;

  // rewards defines the historical rewards of the delegation target.
  HistoricalRewards rewards = 3
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// CurrentRewardsRecord is used for import / export via genesis json.
message CurrentRewardsRecord {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // delegation_target_id is the ID of the delegation target.
  uint32 delegation_target_id = 1
      [ (gogoproto.customname) = "DelegationTargetID" ];

  // rewards defines the current rewards of the delegation target.
  CurrentRewards rewards = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// DelegatorStartingInfoRecord used for import / export via genesis json.
message DelegatorStartingInfoRecord {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // delegator_address is the address of the delegator.
  string delegator_address = 1
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // delegation_target_id is the ID of the delegation target.
  uint32 delegation_target_id = 2
      [ (gogoproto.customname) = "DelegationTargetID" ];

  // starting_info defines the starting info of a delegator.
  DelegatorStartingInfo starting_info = 3
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

message OperatorAccumulatedCommissionRecord {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  uint32 operator_id = 1 [ (gogoproto.customname) = "OperatorID" ];

  // accumulated is the accumulated commission of an operator.
  AccumulatedCommission accumulated = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// DelegationTypeRecords groups various genesis records under the same type
// of delegation target.
message DelegationTypeRecords {
  // outstanding_rewards defines the outstanding rewards of all delegation
  // targets with the same delegation type at genesis.
  repeated OutstandingRewardsRecord outstanding_rewards = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  // historical_rewards defines the historical rewards of all delegation targets
  // with the same delegation type at genesis.
  repeated HistoricalRewardsRecord historical_rewards = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  // current_rewards defines the current rewards of all delegation targets with
  // the same delegation type at genesis.
  repeated CurrentRewardsRecord current_rewards = 3
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  // delegator_starting_infos defines the delegator starting infos of all
  // delegation targets with the same delegation type at genesis.
  repeated DelegatorStartingInfoRecord delegator_starting_infos = 4
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// GenesisState defines the module's genesis state.
message GenesisState {
  // Params defines the parameters of the module.
  Params params = 1 [ (gogoproto.nullable) = false ];

  // NextRewardsPlanID represents the id to be used when creating the next
  // rewards plan.
  uint64 next_rewards_plan_id = 2
      [ (gogoproto.customname) = "NextRewardsPlanID" ];

  // RewardsPlans defines the list of rewards plans.
  repeated RewardsPlan rewards_plans = 3 [ (gogoproto.nullable) = false ];

  // last_rewards_allocation_time is the last time rewards were allocated.
  google.protobuf.Timestamp last_rewards_allocation_time = 4
      [ (gogoproto.stdtime) = true ];

  // delegator_withdraw_infos defines the delegator withdraw infos at genesis.
  repeated DelegatorWithdrawInfo delegator_withdraw_infos = 5
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  // pools_records defines a group of genesis records of all pools at genesis.
  DelegationTypeRecords pools_records = 6
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  // operators_records defines a group of genesis records of all operators at
  // genesis.
  DelegationTypeRecords operators_records = 7
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  // services_records defines a group of genesis records of all services at
  // genesis.
  DelegationTypeRecords services_records = 8
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  // operator_accumulated_commissions defines the accumulated commissions of all
  // operators at genesis.
  repeated OperatorAccumulatedCommissionRecord
      operator_accumulated_commissions = 9
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  // pool_service_total_delegator_shares defines the total delegator shares at
  // genesis.
  repeated PoolServiceTotalDelegatorShares pool_service_total_delegator_shares =
      10 [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}