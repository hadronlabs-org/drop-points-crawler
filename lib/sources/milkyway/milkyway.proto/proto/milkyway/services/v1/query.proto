syntax = "proto3";
package milkyway.services.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "milkyway/services/v1/models.proto";
import "milkyway/services/v1/params.proto";

option go_package = "github.com/milkyway-labs/milkyway/v2/x/services/types";

// Query defines the gRPC querier service.
service Query {
  // Service defines a gRPC query method that returns the service by the given
  // service id.
  rpc Service(QueryServiceRequest) returns (QueryServiceResponse) {
    option (google.api.http).get =
        "/milkyway/services/v1/services/{service_id}";
  }

  // Services defines a gRPC query method that returns the actively validates
  // services currently registered in the module.
  rpc Services(QueryServicesRequest) returns (QueryServicesResponse) {
    option (google.api.http).get = "/milkyway/services/v1/services";
  }

  // ServiceParams defines a gRPC query method that returns the parameters of
  // service.
  rpc ServiceParams(QueryServiceParamsRequest)
      returns (QueryServiceParamsResponse) {
    option (google.api.http).get =
        "/milkyway/services/v1/services/{service_id}/params";
  }

  // Params defines a gRPC query method that returns the parameters of the
  // module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/milkyway/services/v1/params";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  Params params = 1 [ (gogoproto.nullable) = false ];
}

// QueryServicesRequest is the request type for the Query/Services RPC method.
message QueryServicesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryServicesResponse is the response type for the Query/Services RPC method.
message QueryServicesResponse {
  // Services services defines the list of actively validates services
  repeated Service services = 1 [ (gogoproto.nullable) = false ];

  // Pagination defines the pagination response
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryServiceRequest is the request type for the Query/Service RPC method.
message QueryServiceRequest {
  // ServiceID is the ID of the service to query
  uint32 service_id = 1;
}

// QueryServiceResponse is the response type for the Query/Service RPC method.
message QueryServiceResponse {
  Service service = 1 [ (gogoproto.nullable) = false ];
}

// QueryServiceParamsRequest is the request type for the Query/ServiceParams RPC
// method.
message QueryServiceParamsRequest { uint32 service_id = 1; }

// QueryServiceParamsResponse is the response type for the Query/ServiceParams
// RPC method.
message QueryServiceParamsResponse {
  ServiceParams service_params = 1 [ (gogoproto.nullable) = false ];
}
